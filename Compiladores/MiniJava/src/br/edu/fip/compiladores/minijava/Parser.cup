package br.edu.fip.compiladores.minijava;

import java_cup.runtime.*;
import java.io.*;
import java.util.*;

terminal BOOLEAN, CLASS, EXTENDS, PUBLIC, STATIC, VOID, MAIN, STRING, RETURN, 
    INT, IF, ELSE, WHILE, SYSTEM_OUT_PRINTLN, LENGTH, TRUE, FALSE, THIS, NEW, 
    ID, NUM, CHAVE_ESQUERDA, CHAVE_DIREITA, COLCHETE_ESQUERDA, COLCHETE_DIREITA,
    PARENTESES_ESQUERDA, PARENTESES_DIREITA, PONTO_E_VIRGULA, PONTO, VIRGULA,
    IGUAL, MENOR_QUE, IGUAL_IGUAL, EXCLAMACAO_IGUAL, ADICAO, SUBTRACAO,
    MULTIPLICACAO, DIVISAO, AND, EXCLAMACAO;

non terminal _PROG_, _MAIN_, _CLASSE_, _VAR_, _METODO_, _PARAMS_, _TIPO_, _CMD_,
    _EXP_, _REXP_, _AEXP_, _MEXP_, _SEXP_, _PEXP_, _EXPS_, _A_, _B_, _C_, _D_,
    _E_, _F_, _G_, _H_, _I_;

start with _PROG_;

_PROG_ ::= _MAIN_ _A_;

_MAIN_ ::= CLASS ID CHAVE_ESQUERDA PUBLIC STATIC VOID MAIN PARENTESES_ESQUERDA STRING COLCHETE_ESQUERDA COLCHETE_DIREITA ID PARENTESES_DIREITA CHAVE_ESQUERDA _CMD_ CHAVE_DIREITA CHAVE_DIREITA;

_A_ ::= _CLASSE_ _A_ | ;

_CLASSE_ ::= CLASS ID _B_ CHAVE_ESQUERDA _C_ _D_ CHAVE_DIREITA;

_B_ ::= EXTENDS ID | ;

_C_ ::= _VAR_ _C_ | ;

_VAR_ ::= _TIPO_ ID PONTO_E_VIRGULA;

_D_ ::= _METODO_ _D_ | ;

_METODO_ ::= PUBLIC _TIPO_ ID PARENTESES_ESQUERDA _E_ PARENTESES_DIREITA CHAVE_ESQUERDA _C_ _F_ RETURN _EXP_ PONTO_E_VIRGULA CHAVE_DIREITA;

_E_ ::= _PARAMS_ | ;

_F_ ::= _CMD_ _F_ | ;

_PARAMS_ ::= _TIPO_ ID _G_;

_G_ ::= VIRGULA _TIPO_ ID _G_ | ;

_TIPO_ ::= INT COLCHETE_ESQUERDA COLCHETE_DIREITA
    | BOOLEAN
    | INT;

_CMD_ ::= _F_
    | IF PARENTESES_ESQUERDA _EXP_ PARENTESES_DIREITA _CMD_
    | WHILE PARENTESES_ESQUERDA _EXP_ PARENTESES_DIREITA _CMD_
    | SYSTEM_OUT_PRINTLN PARENTESES_ESQUERDA _EXP_ PARENTESES_DIREITA PONTO_E_VIRGULA
    | ID IGUAL _EXP_ PONTO_E_VIRGULA;

_EXP_ ::= _EXP_ AND _REXP_ 
    | _REXP_;

_REXP_ ::= _REXP_ MENOR_QUE _AEXP_
    | _REXP_ IGUAL_IGUAL _AEXP_
    | _REXP_ EXCLAMACAO_IGUAL _AEXP_
    | _AEXP_;

_AEXP_ ::= _AEXP_ ADICAO _MEXP_
    | _AEXP_ SUBTRACAO _MEXP_
    | _MEXP_;

_MEXP_ ::= _MEXP_ MULTIPLICACAO _SEXP_
    | _MEXP_ DIVISAO _SEXP_
    | _SEXP_;

_SEXP_ ::= EXCLAMACAO _SEXP_
    | SUBTRACAO _SEXP_
    | TRUE
    | FALSE
    | NUM
    | NEW INT COLCHETE_ESQUERDA _EXP_ COLCHETE_DIREITA
    | _PEXP_ PONTO LENGTH
    | _PEXP_ COLCHETE_ESQUERDA _EXP_ COLCHETE_DIREITA
    | _PEXP_;

_PEXP_ ::= ID
    | THIS
    | NEW ID PARENTESES_ESQUERDA PARENTESES_DIREITA
    | PARENTESES_ESQUERDA _EXP_ PARENTESES_DIREITA
    | _PEXP_ PONTO ID
    | _PEXP_ PONTO ID PARENTESES_ESQUERDA _H_ PARENTESES_DIREITA;

_H_ ::= _EXPS_ | ;

_EXPS_ ::= _EXP_ _I_;

_I_ ::= VIRGULA _EXP_ _I_ | ;